function Get-CpNetworkDevices {
  [CmdletBinding()]
  param (
    [Parameter(
      Position = 0,
      Mandatory = $true,
      HelpMessage = "A ClearPass session generated by New-CpSession.",
      ValueFromPipeLine = $false,
      ValueFromPipeLineByPropertyName = $false)]
    [Session]$Session,

    [Parameter(
      Position = 1,
      Mandatory = $false,
      HelpMessage = "Maximum number of items to return (1 â€“ 1000).",
      ValueFromPipeLine = $false,
      ValueFromPipeLineByPropertyName = $false)]
    [Int]$Limit=50,

    [Parameter(
      Position = 2,
      Mandatory = $false,
      HelpMessage = "Zero based offset to start from.",
      ValueFromPipeLine = $false,
      ValueFromPipeLineByPropertyName = $false)]
    [Int]$Offset=0,

    [Parameter(
      Position = 3,
      Mandatory = $false,
      HelpMessage = "Sort ordering for returned items.",
      ValueFromPipeLine = $false,
      ValueFromPipeLineByPropertyName = $false)]
    [String]$Sort="id",

    [Parameter(
      Position = 4,
      Mandatory = $false,
      HelpMessage = "Sort ordering for returned items.",
      ValueFromPipeLine = $false,
      ValueFromPipeLineByPropertyName = $false)]
    [String]$Filter="{}",

    [Parameter(
      Position = 5,
      Mandatory = $false,
      ValueFromPipeLine = $false,
      ValueFromPipeLineByPropertyName = $false)]
    [Switch]$SkipCertificateCheck
  )

  $uri = [Uri]"https://$($Session.Hostname)/api/network-device?filter=$($Filter)&sort=+$($Sort)&offset=$($OffSet)&limit=$($Limit)"

  $headers = @{
    "Authorization" = "Bearer $($Session.AccessToken)"
    "Accept" = "application/json"
  }

  $params = @{
    Uri = $uri.OriginalString
    Method = "Get"
    Headers = $headers
    SkipCertificateCheck = $SkipCertificateCheck
  }

  try{
    $response = Invoke-RestMethod @params

    $response.'_embedded'.items | ForEach-Object {
      $networkDevice = [NetworkDevice]@{
        Id              = $_.id
        Name            = $_.name
        Description     = $_.description
        IpAddress       = $_.ip_address
        VendorName      = $_.vendor_name
        CoaCapable      = $_.coa_capable
        CoaPort         = $_.coa_port
        RadsecEnabled   = $_.radsec_enabled
        Attributes      = $_.attributes
      }
      
      Write-Output $networkDevice
    }
  }
  catch {
    Write-Error $_
  }
}