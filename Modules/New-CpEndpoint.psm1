function New-CpEndpoint {
  [CmdletBinding()]
  param (
    [Parameter(
      Mandatory = $false,
      HelpMessage = "A ClearPass session generated by New-CpSession.")]
    [Session]$Session=$global:CpSession,

    [Parameter(
      Mandatory = $true,
      HelpMessage = "Friendly name of endpoint.")]
    [String]$Name,

    [Parameter(
      Mandatory = $false,
      HelpMessage = "A description of the endpoint.")]
    [String]$Description,

    [Parameter(
      Mandatory = $true,
      HelpMessage = "The IP address of the endpoint.")]
    [String]$MacAddress,

    [Parameter(
      Mandatory = $false,
      HelpMessage = "The status the endpoint.")]
    [ValidateSet("Known", "Unknown","Disabled")]
    [String]$Status,

    [Parameter(
      Mandatory = $false,
      HelpMessage = "The Device Insight Tags for the endpoint.")]
    [String]$DeviceInsightTags,

    [Parameter(
      Mandatory = $false,
      HelpMessage = "Is the endpoint configured for RadSec?")]
    [Hashtable]$Attributes=$false,

    [Parameter(
      Mandatory = $false,
      HelpMessage = "Don't verify the server certificate.")]
    [Switch]$SkipCertificateCheck
  )

  $uri = [Uri]"https://$($Session.Hostname)/api/endpoint"

  $headers = @{
    "Authorization" = "Bearer $($Session.AccessToken)"
    "Accept" = "application/json"
  }

  $body = @{
    "name"                = $Name
    "description"         = $Description
    "mac_address"         = $MacAddress
    "status"              = $Status
    "device_insight_tags" = $DeviceInsightTags
    "attributes"          = $Attributes
  } | ConvertTo-Json -Depth 100
  
  $params = @{
    Uri = $uri.OriginalString
    Method = "Post"
    Body = $body
    Headers = $headers
    ContentType = "application/json"
    SkipCertificateCheck = $SkipCertificateCheck
  }

  try{
    $response = Invoke-RestMethod @params

      $endpoint = [Endpoint]@{
        Id                = $response.id
        MacAddress        = $response.mac_address
        Description       = $response.description
        Status            = $response.status
        DeviceInsightTags = $response.device_insight_tags
        Attributes        = $response.attributes
      }

    Write-Output $endpoint
  }
  catch {
    Write-Error $_
  }
}